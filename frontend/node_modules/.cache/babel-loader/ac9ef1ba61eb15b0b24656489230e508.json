{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/h0s1g4k1/matf-levi9-zadatak/frontend/src/components/CreateItem/ItemAdd.js\";\n// Page for adding new item in the DB.\nimport React, { Component } from 'react';\nimport './ItemAdd.css';\nexport default class ItemAdd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendCallback = async () => {\n      if (this.state.name === \"\" || this.state.description === \"\") {\n        console.log(\"Inputs should not be empty\");\n      } else {\n        await fetch('/admin/unos-novog-proizvoda', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: this.state.name,\n            description: this.state.description\n          })\n        });\n      }\n\n      document.querySelectorAll('input').forEach(input => input.value = \"\");\n      this.setState({\n        name: undefined,\n        description: undefined\n      });\n    };\n\n    this.sendCallback = this.sendCallback.bind(this);\n    this.nameInputChange = this.nameInputChange.bind(this);\n    this.descriptionInputChange = this.descriptionInputChange.bind(this);\n    this.state = {\n      name: \"\",\n      description: \"\"\n    };\n  }\n\n  nameInputChange(event) {\n    this.setState({\n      \"name\": event.target.value\n    });\n  }\n\n  onDescriptionChange(event) {\n    this.setState({\n      \"description\": event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-entry\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"ui form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Product name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: this.onNameChange,\n              value: this.state.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Product description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: this.onDescriptionChange,\n              value: this.state.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button\",\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n    {\n      /* </form>\n      <form>\n       <div id=\"ItemAdd\">\n         <label>Naziv</label>\n         <input type=\"text\" id=\"nameInput\" onChange={this.nameInputChange}></input>\n         <label>Opis</label>\n         <input type=\"text\" id=\"descriptionInput\" onChange={this.descriptionInputChange}></input>\n         <button type=\"submit\" onClick={this.sendCallback}>Unesi</button>\n       </div>\n      </form>\n      ) */\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/h0s1g4k1/matf-levi9-zadatak/frontend/src/components/CreateItem/ItemAdd.js"],"names":["React","Component","ItemAdd","constructor","props","sendCallback","state","name","description","console","log","fetch","method","headers","body","JSON","stringify","document","querySelectorAll","forEach","input","value","setState","undefined","bind","nameInputChange","descriptionInputChange","event","target","onDescriptionChange","render","onNameChange"],"mappings":"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","sourcesContent":["// Page for adding new item in the DB.\nimport React, {Component} from 'react'\nimport './ItemAdd.css';\n\nexport default class ItemAdd extends Component {\n    constructor(props) {\n        super(props);\n\n        this.sendCallback = this.sendCallback.bind(this);\n        this.nameInputChange = this.nameInputChange.bind(this);\n        this.descriptionInputChange = this.descriptionInputChange.bind(this);\n        this.state = {\n          name: \"\",\n          description: \"\"\n        }\n    }\n\n    nameInputChange(event) {\n      this.setState({\"name\": event.target.value});\n    }\n\n    onDescriptionChange(event) {\n      this.setState({\"description\": event.target.value});\n    }\n\n    sendCallback = async() => {\n      if (this.state.name === \"\" || this.state.description === \"\") {\n        console.log(\"Inputs should not be empty\")\n      } else {\n        await fetch('/admin/unos-novog-proizvoda', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: this.state.name,\n            description: this.state.description\n          })\n        });\n      }\n\n      document.querySelectorAll('input').forEach(input => (input.value = \"\"));\n      this.setState({name: undefined, description: undefined});\n    }\n\n    render() {\n        return (\n            <form>\n              <div className=\"create-entry\">\n                <h2>New entry</h2>\n                <form className=\"ui form\">\n                  <div className=\"field\">\n                    <label>Product name:</label>\n                    <input\n                      type=\"text\"\n                      onChange={this.onNameChange}\n                      value={this.state.name}\n                    ></input>\n                  </div>\n                  <div className=\"field\">\n                    <label>Product description:</label>\n                    <textarea\n                      onChange={this.onDescriptionChange}\n                      value = {this.state.description}\n                    ></textarea>\n                  </div>\n              \n                  <button className=\"ui button\" type=\"submit\">\n                    Create\n                  </button>\n                </form>\n\n                <p>{this.state.description}</p>\n              </div>\n            </form>\n        );\n            {/* </form>\n            <form>\n              <div id=\"ItemAdd\">\n                <label>Naziv</label>\n                <input type=\"text\" id=\"nameInput\" onChange={this.nameInputChange}></input>\n                <label>Opis</label>\n                <input type=\"text\" id=\"descriptionInput\" onChange={this.descriptionInputChange}></input>\n                <button type=\"submit\" onClick={this.sendCallback}>Unesi</button>\n              </div>\n            </form>\n        ) */}\n    }\n}"]},"metadata":{},"sourceType":"module"}
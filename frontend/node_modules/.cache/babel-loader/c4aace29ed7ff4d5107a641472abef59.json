{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/h0s1g4k1/matf-levi9-zadatak/frontend/src/components/CreateItem/ItemAdd.js\";\n// Page for adding new item in the DB.\nimport React, { Component } from 'react';\nimport './ItemAdd.css';\nexport default class ItemAdd extends Component {\n  constructor(props) {\n    super(props); //this.sendCallback = this.sendCallback.bind(this);\n\n    this.sendCallback = async () => {\n      console.log(\"Dodjoh ovde!\");\n\n      if (this.state.name === \"\" || this.state.description === \"\") {\n        console.log(\"Inputs should not be empty\");\n      } else {\n        console.log(this.state.name);\n        console.log(this.state.description);\n        await fetch('htpp://localhost:33336/admin/unos-novog-proizvoda', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: this.state.name,\n            description: this.state.description\n          })\n        });\n      }\n\n      document.querySelectorAll('input').forEach(input => input.value = \"\");\n      this.setState({\n        name: undefined,\n        description: undefined\n      });\n    };\n\n    this.onNameChange = this.onNameChange.bind(this);\n    this.onDescriptionChange = this.onDescriptionChange.bind(this);\n    this.state = {\n      name: \"\",\n      description: \"\"\n    };\n  }\n\n  onNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  onDescriptionChange(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ui form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Product name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.onNameChange,\n            value: this.state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Product description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: this.onDescriptionChange,\n            value: this.state.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button\",\n          type: \"submit\",\n          onClick: async () => {\n            console.log(\"Pozvah se\");\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/h0s1g4k1/matf-levi9-zadatak/frontend/src/components/CreateItem/ItemAdd.js"],"names":["React","Component","ItemAdd","constructor","props","sendCallback","console","log","state","name","description","fetch","method","headers","body","JSON","stringify","document","querySelectorAll","forEach","input","value","setState","undefined","onNameChange","bind","onDescriptionChange","event","target","render"],"mappings":"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","sourcesContent":["// Page for adding new item in the DB.\nimport React, {Component} from 'react'\nimport './ItemAdd.css';\n\nexport default class ItemAdd extends Component {\n    constructor(props) {\n        super(props);\n\n        //this.sendCallback = this.sendCallback.bind(this);\n        this.onNameChange = this.onNameChange.bind(this);\n        this.onDescriptionChange = this.onDescriptionChange.bind(this);\n        this.state = {\n          name: \"\",\n          description: \"\"\n        }\n    }\n\n    onNameChange(event) {\n      this.setState({ name: event.target.value });\n    }\n\n    onDescriptionChange(event) {\n      this.setState({ description: event.target.value });\n    }\n\n    sendCallback = async() => {\n      console.log(\"Dodjoh ovde!\")\n      if (this.state.name === \"\" || this.state.description === \"\") {\n        console.log(\"Inputs should not be empty\")\n      } else {\n        console.log(this.state.name)\n        console.log(this.state.description)\n        await fetch('htpp://localhost:33336/admin/unos-novog-proizvoda', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: this.state.name,\n            description: this.state.description\n          })\n        });\n      }\n\n      document.querySelectorAll('input').forEach(input => (input.value = \"\"));\n      this.setState({name: undefined, description: undefined});\n    }\n\n    render() {\n        return (\n          <div className=\"create-entry\">\n            <h2>New entry</h2>\n            <form className=\"ui form\">\n              <div className=\"field\">\n                <label>Product name:</label>\n                <input\n                  type=\"text\"\n                  onChange={this.onNameChange}\n                  value={this.state.name}\n                ></input>\n              </div>\n              <div className=\"field\">\n                <label>Product description:</label>\n                <textarea\n                  onChange={this.onDescriptionChange}\n                  value = {this.state.description}\n                ></textarea>\n              </div>\n              \n              <button className=\"ui button\" type=\"submit\" onClick={async () => {console.log(\"Pozvah se\")}}>\n                Create\n              </button>\n            </form>\n\n            <p>{this.state.description}</p>\n          </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/h0s1g4k1/matf-levi9-zadatak/frontend/src/components/ItemList/ItemList.js\";\nimport React, { Component } from 'react';\nimport './ItemList.css';\nexport default class ItemList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteCallback = async id => {\n      const res = await fetch('http://localhost:33338/admin/proizvodi', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      res.json().then(res => {\n        let tableRows = [];\n\n        for (const [key, value] of Object.entries(res)) {\n          const item = {\n            id: parseInt(key),\n            name: value.name,\n            description: value.description\n          };\n          tableRows.push(item);\n        }\n\n        this.setState({\n          tableRows: tableRows\n        });\n      });\n    };\n\n    this.state = {\n      tableRows: []\n    };\n    this.renderCallback = this.renderCallback.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderCallback();\n  } // Ispisivanje svih proizvoda iz mape\n\n\n  renderCallback() {\n    fetch('http://localhost:33338/admin/proizvodi').then(res => res.json()).then(res => {\n      let tableRows = [];\n\n      for (const [key, value] of Object.entries(res)) {\n        let item = {\n          id: parseInt(key),\n          name: value.name,\n          description: value.description\n        };\n        tableRows.push(item);\n      }\n\n      this.setState({\n        tableRows: tableRows\n      });\n    }).catch(err => console.error(err));\n  } // Poziv metoda za brisanje jednog proizvoda\n  // Prosledi se id proizvoda i nakon toga\n  // Se ispisu preostali proizvodi\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ItemList\",\n      children: [this.props.children, /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, \"\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.tableRows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: () => this.deleteCallback(row.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, row.name + row.description, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/home/h0s1g4k1/matf-levi9-zadatak/frontend/src/components/ItemList/ItemList.js"],"names":["React","Component","ItemList","constructor","props","deleteCallback","id","res","fetch","method","headers","body","JSON","stringify","json","then","tableRows","key","value","Object","entries","item","parseInt","name","description","push","setState","state","renderCallback","bind","componentDidMount","catch","err","console","error","render","children","map","row"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './ItemList.css';\n\nexport default class ItemList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tableRows: []\n    }\n\n    this.renderCallback = this.renderCallback.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderCallback();\n  }\n\n  // Ispisivanje svih proizvoda iz mape\n  renderCallback() {\n    fetch('http://localhost:33338/admin/proizvodi')\n    .then((res) => res.json())\n    .then((res) => {\n      let tableRows = []\n      for (const [key, value] of Object.entries(res)) {\n        let item = {\n          id: parseInt(key),\n          name: value.name,\n          description: value.description\n        };\n\n        tableRows.push(item)\n      }\n\n      this.setState({tableRows: tableRows})\n    })\n    .catch((err) => console.error(err));\n  }\n\n  // Poziv metoda za brisanje jednog proizvoda\n  // Prosledi se id proizvoda i nakon toga\n  // Se ispisu preostali proizvodi\n  deleteCallback = async(id) => {\n    const res = await fetch('http://localhost:33338/admin/proizvodi', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({id: id}),\n    });\n\n    res\n    .json()\n    .then((res) => {\n        let tableRows = []\n        for (const [key, value] of Object.entries(res)) {\n            const item = {\n              id: parseInt(key),\n              name: value.name,\n              description: value.description\n            };\n\n            tableRows.push(item);\n        }\n\n        this.setState({tableRows: tableRows});\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"ItemList\">\n        {this.props.children}\n        <table>\n          <thead>\n            <tr key={\"\"}>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Description</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.tableRows.map((row) => (\n                <tr key={row.name + row.description}>\n                  <td>{row.id}</td>\n                  <td>{row.name}</td>\n                  <td>{row.description}</td>\n                  <td>\n                    <button type=\"submit\" onClick={() => this.deleteCallback(row.id)}>Delete</button>\n                  </td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}